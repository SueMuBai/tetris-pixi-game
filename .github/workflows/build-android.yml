name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Setup Java JDK 17 (required by Android SDK tools)
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK (use existing preinstalled SDK)
      run: |
        # 使用预安装的Android SDK
        export ANDROID_HOME=/usr/local/lib/android/sdk
        export ANDROID_SDK_ROOT=/usr/local/lib/android/sdk
        
        # 设置环境变量
        echo "ANDROID_HOME=$ANDROID_HOME" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT" >> $GITHUB_ENV
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
        
        # 检查现有SDK和build tools
        echo "=== Current Android SDK structure ==="
        ls -la $ANDROID_HOME/ || echo "Android SDK not found"
        echo "=== Available build tools ==="
        ls -la $ANDROID_HOME/build-tools/ || echo "Build tools not found"
        echo "=== Available platforms ==="
        ls -la $ANDROID_HOME/platforms/ || echo "Platforms not found"
        
        # 接受许可证
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses || true
        
        # 只安装缺失的组件（如果需要）
        echo "=== Installing missing components if needed ==="
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-30" || echo "Platform android-30 installation failed or already exists"
        
        # 验证最终状态
        echo "=== Final verification ==="
        ls -la $ANDROID_HOME/build-tools/ || echo "Build tools still not found"
        ls -la $ANDROID_HOME/platforms/ || echo "Platforms not found"
      
    - name: Install Cordova (compatible version)
      run: npm install -g cordova@12.0.0
      
    - name: Create Cordova project
      run: |
        cordova create tetris-android com.suemuBai.tetris "俄罗斯方块"
        cd tetris-android
        cp ../index.html www/index.html
        cp ../game.js www/game.js
        cp ../config-simple.xml config.xml
        
    - name: Add Android platform (newer version for JDK 17)
      run: |
        cd tetris-android
        echo "Adding Android platform..."
        cordova platform add android@12.0.1 --verbose
        
    - name: Verify environment before build
      run: |
        echo "=== Environment Variables ==="
        echo "ANDROID_HOME: $ANDROID_HOME"
        echo "ANDROID_SDK_ROOT: $ANDROID_SDK_ROOT"
        echo "JAVA_HOME: $JAVA_HOME"
        echo "=== Java Version ==="
        java -version
        echo "=== Available build tools versions ==="
        ls -la $ANDROID_HOME/build-tools/ || echo "Build tools not found"
        echo "=== Cordova Requirements ==="
        cd tetris-android && cordova requirements android
        
    - name: Build APK
      run: |
        cd tetris-android
        export GRADLE_OPTS="-Xmx4g -Dorg.gradle.daemon=false"
        export ANDROID_HOME=$ANDROID_HOME
        export ANDROID_SDK_ROOT=$ANDROID_SDK_ROOT
        export JAVA_HOME=$JAVA_HOME
        echo "Starting Cordova build..."
        cordova build android --debug --verbose
        
    - name: List all generated files
      if: always()
      run: |
        echo "=== Searching for APK files ==="
        find tetris-android -name "*.apk" -type f || echo "No APK files found"
        echo "=== Listing build outputs ==="
        find tetris-android -path "*/build/outputs/*" -type f || echo "No build outputs found"
        
    - name: Upload Debug APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: tetris-debug-apk
        path: tetris-android/platforms/android/app/build/outputs/apk/debug/app-debug.apk
        
    - name: Upload any APK files found
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: all-found-apks
        path: tetris-android/**/*.apk